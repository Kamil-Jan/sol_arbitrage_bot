from construct import Array, Bytes, Int8ul, Int16ul, Int32ul, Int32sl, Int64ul, BytesInteger
from construct import Struct as cStruct


AMM_V4_LAYOUT = cStruct(
    "status" / Int64ul,
    "nonce" / Int64ul,
    "maxOrder" / Int64ul,
    "depth" / Int64ul,
    "baseDecimals" / Int64ul,
    "quoteDecimals" / Int64ul,
    "state" / Int64ul,
    "resetFlag" / Int64ul,
    "minSize" / Int64ul,
    "volMaxCutRatio" / Int64ul,
    "amountWaveRatio" / Int64ul,
    "baseLotSize" / Int64ul,
    "quoteLotSize" / Int64ul,
    "minPriceMultiplier" / Int64ul,
    "maxPriceMultiplier" / Int64ul,
    "systemDecimalValue" / Int64ul,
    "minSeparateNumerator" / Int64ul,
    "minSeparateDenominator" / Int64ul,
    "tradeFeeNumerator" / Int64ul,
    "tradeFeeDenominator" / Int64ul,
    "pnlNumerator" / Int64ul,
    "pnlDenominator" / Int64ul,
    "swapFeeNumerator" / Int64ul,
    "swapFeeDenominator" / Int64ul,
    "baseNeedTakePnl" / Int64ul,
    "quoteNeedTakePnl" / Int64ul,
    "quoteTotalPnl" / Int64ul,
    "baseTotalPnl" / Int64ul,
    "poolOpenTime" / Int64ul,
    "punishPcAmount" / Int64ul,
    "punishCoinAmount" / Int64ul,
    "orderbookToInitTime" / Int64ul,
    "swapBaseInAmount" / BytesInteger(16, signed=False, swapped=True),
    "swapQuoteOutAmount" / BytesInteger(16, signed=False, swapped=True),
    "swapBase2QuoteFee" / Int64ul,
    "swapQuoteInAmount" / BytesInteger(16, signed=False, swapped=True),
    "swapBaseOutAmount" / BytesInteger(16, signed=False, swapped=True),
    "swapQuote2BaseFee" / Int64ul,
    "baseVault" / Bytes(32),
    "quoteVault" / Bytes(32),
    "baseMint" / Bytes(32),
    "quoteMint" / Bytes(32),
    "lpMint" / Bytes(32),
    "openOrders" / Bytes(32),
    "marketId" / Bytes(32),
    "marketProgramId" / Bytes(32),
    "targetOrders" / Bytes(32),
    "withdrawQueue" / Bytes(32),
    "lpVault" / Bytes(32),
    "owner" / Bytes(32),
    "lpReserve" / Int64ul,
    "padding" / Array(3, Int64ul)
)

RewardInfo = cStruct(
    "rewardState" / Int8ul,
    "openTime" / Int64ul,
    "endTime" / Int64ul,
    "lastUpdateTime" / Int64ul,
    "emissionsPerSecondX64" / BytesInteger(16, signed=False, swapped=True),
    "rewardTotalEmissioned" / Int64ul,
    "rewardClaimed" / Int64ul,
    "tokenMint" / Bytes(32),
    "tokenVault" / Bytes(32),
    "creator" / Bytes(32),
    "rewardGrowthGlobalX64" / BytesInteger(16, signed=False, swapped=True)
)

CLMM_LAYOUT = cStruct(
    "blob" / Bytes(8),
    "bump" / Int8ul,
    "ammConfig" / Bytes(32),
    "creator" / Bytes(32),
    "mintA" / Bytes(32),
    "mintB" / Bytes(32),
    "vaultA" / Bytes(32),
    "vaultB" / Bytes(32),
    "observationId" / Bytes(32),
    "mintDecimalsA" / Int8ul,
    "mintDecimalsB" / Int8ul,
    "tickSpacing" / Int16ul,
    "liquidity" / BytesInteger(16, signed=False, swapped=True),
    "sqrtPriceX64" / BytesInteger(16, signed=False, swapped=True),
    "tickCurrent" / Int32sl,
    "unknown" / Int32ul,
    "feeGrowthGlobalX64A" / BytesInteger(16, signed=False, swapped=True),
    "feeGrowthGlobalX64B" / BytesInteger(16, signed=False, swapped=True),
    "protocolFeesTokenA" / Int64ul,
    "protocolFeesTokenB" / Int64ul,
    "swapInAmountTokenA" / BytesInteger(16, signed=False, swapped=True),
    "swapOutAmountTokenB" / BytesInteger(16, signed=False, swapped=True),
    "swapInAmountTokenB" / BytesInteger(16, signed=False, swapped=True),
    "swapOutAmountTokenA" / BytesInteger(16, signed=False, swapped=True),
    "status" / Int8ul,
    "unknown_seq" / Array(7, Int8ul),
    "rewardInfos" / Array(3, RewardInfo),
    "tickArrayBitmap" / Array(16, Int64ul),
    "totalFeesTokenA" / Int64ul,
    "totalFeesClaimedTokenA" / Int64ul,
    "totalFeesTokenB" / Int64ul,
    "totalFeesClaimedTokenB" / Int64ul,
    "fundFeesTokenA" / Int64ul,
    "fundFeesTokenB" / Int64ul,
    "startTime" / Int64ul,
    "padding" / Array(57, Int64ul)
)
